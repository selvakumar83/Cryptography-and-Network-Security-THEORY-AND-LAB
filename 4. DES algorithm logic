import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;
import java.util.Scanner;

public class DESExample {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter plaintext: ");
        String plaintext = sc.nextLine();
        System.out.print("Enter 8-character key: ");
        String keyInput = sc.nextLine();
        if(keyInput.length() != 8){
            System.out.println("DES key must be 8 characters!");
            return;
        }
        byte[] keyBytes = keyInput.getBytes();
        SecretKey key = new SecretKeySpec(keyBytes, "DES");
        Cipher cipher = Cipher.getInstance("DES/ECB/PKCS5Padding");

        // Encryption
        cipher.init(Cipher.ENCRYPT_MODE, key);
        byte[] encrypted = cipher.doFinal(plaintext.getBytes());
        String cipherText = Base64.getEncoder().encodeToString(encrypted);
        System.out.println("Encrypted Text: " + cipherText);

        // Decryption
        cipher.init(Cipher.DECRYPT_MODE, key);
        byte[] decrypted = cipher.doFinal(Base64.getDecoder().decode(cipherText));
        System.out.println("Decrypted Text: " + new String(decrypted));
    }
}
