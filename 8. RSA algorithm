import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import javax.crypto.Cipher;
import java.util.Base64;
import java.util.Scanner;

public class RSAUserInput {
    public static void main(String[] args) {
        try {
            // 1. Take user input
            Scanner sc = new Scanner(System.in);
            System.out.print("Enter plaintext message: ");
            String plaintext = sc.nextLine();

            // 2. Generate RSA Key Pair
            KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");
            keyGen.initialize(2048); // Key size
            KeyPair pair = keyGen.generateKeyPair();
            PublicKey publicKey = pair.getPublic();
            PrivateKey privateKey = pair.getPrivate();

            // 3. Print keys
            String pubKeyStr = Base64.getEncoder().encodeToString(publicKey.getEncoded());
            String privKeyStr = Base64.getEncoder().encodeToString(privateKey.getEncoded());

            System.out.println("\n--- RSA Key Pair ---");
            System.out.println("Public Key: " + pubKeyStr);
            System.out.println("Private Key: " + privKeyStr);

            // 4. Encrypt the plaintext using the public key
            Cipher encryptCipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
            encryptCipher.init(Cipher.ENCRYPT_MODE, publicKey);
            byte[] encryptedBytes = encryptCipher.doFinal(plaintext.getBytes());
            String encryptedText = Base64.getEncoder().encodeToString(encryptedBytes);

            // 5. Decrypt the ciphertext using the private key
            Cipher decryptCipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
            decryptCipher.init(Cipher.DECRYPT_MODE, privateKey);
            byte[] decryptedBytes = decryptCipher.doFinal(Base64.getDecoder().decode(encryptedText));
            String decryptedText = new String(decryptedBytes);

            // 6. Print results
            System.out.println("\n--- Encryption/Decryption ---");
            System.out.println("Plaintext: " + plaintext);
            System.out.println("Encrypted Text (Base64): " + encryptedText);
            System.out.println("Decrypted Text: " + decryptedText);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
